{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jovan/Documents/GitHub/COVID-NineTeam/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser } from \"../redux/actions/index\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createBottomTabNavigator();\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var focused = _ref.focused,\n                color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              focused: true,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n                color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              focused: true,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }\n            });\n          },\n          tabBarLabelPosition: 'below-icon'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/jovan/Documents/GitHub/COVID-NineTeam/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","createBottomTabNavigator","MaterialCommunityIcons","FeedScreen","ProfileScreen","Tab","Main","props","tabBarIcon","focused","color","size","tabBarLabelPosition","AddScreen","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text } from 'react-native'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser } from '../redux/actions/index'\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\n\nconst Tab = createBottomTabNavigator(); \n\nexport class Main extends Component {\n    componentDidMount() {\n       this.props.fetchUser();\n    }\n    render() {\n        return (\n            <Tab.Navigator>\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \n                    options= {{\n                        tabBarIcon: ({focused, color, size}) => (\n                            <MaterialCommunityIcons name=\"home\" color={color} size={26} focused={true}/>\n                        ), tabBarLabelPosition: 'below-icon'\n                    }}\n                />\n                <Tab.Screen name=\"Add\" component={AddScreen}\n                    options= {{\n                        tabBarIcon: ({color, size}) => (\n                            <MaterialCommunityIcons name=\"plus-box\" color={color} size={26}/>\n                        ), tabBarLabelPosition: 'below-icon'\n                    }}\n                />\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                    options= {{\n                        tabBarIcon: ({focused, color, size}) => (\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} focused={true}/>\n                        ), tabBarLabelPosition: 'below-icon'\n                    }}\n                />\n            </Tab.Navigator>\n        )\n    }\n}\n// allows to freely access user's data within component\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);"]},"metadata":{},"sourceType":"module"}